###########
3. Viết chương trình C++ cài đặt lớp Mảng số nguyên với ý nghĩa cài đặt một số toán tử
hỗ trợ cho việc xử lý trên mảng động, trong đó các thuộc tính của lớp mảng số nguyên
được định nghĩa như sau:(file image)
● Cài đặt nạp chồng toán tử cho lớp Mảng số nguyên này, lưu ý cần cài đặt tất cả các
phương thức tạo lập, hủy có liên quan để chương trình không bị lỗi
o Toán tử =: cho phép gán lại từng giá trị số nguyên của một mảng số nguyên
khác.
o Toán tử +: cho phép cộng 2 mảng số nguyên theo cơ chế: cộng từng giá trị
phần tử tại từng vị trí, nếu 2 mảng có kích thước khác nhau, chỉ cộng những
phần tử nào có giá trị tương ứng, giá trị khác giữ nguyên, ví dụ:
#########
#####File,h
#pragma once
#include<iostream>
using namespace std;

class MangSoNguyen
{
private:
	int* dulieu;
	int kichthuoc;
public:
	MangSoNguyen();
	MangSoNguyen(int*, int);
	MangSoNguyen(int);
   // MangSoNguyen(const MangSoNguyen& a);

	MangSoNguyen operator=(const MangSoNguyen& a);
	MangSoNguyen operator+(MangSoNguyen&);
	MangSoNguyen operator++(int x);
	

	friend istream& operator>>(istream& is, MangSoNguyen& );
	friend ostream& operator<<(ostream& os, const MangSoNguyen& );


};

#####File.cpp
#include "MangSoNguyen.h"

MangSoNguyen::MangSoNguyen()
{
    this->dulieu = new int [1000];
    kichthuoc = 0;
}

MangSoNguyen::MangSoNguyen(int* a, int b) : dulieu(a), kichthuoc(b) {}

MangSoNguyen::MangSoNguyen(int a)
{
    this->kichthuoc = a;
    this->dulieu = new int[a];
}

istream& operator>>(istream& is, MangSoNguyen& a)
{
    cout << "Nhap kich thuoc mang: ";is >> a.kichthuoc; 
    for (int i = 0; i < a.kichthuoc; i++)
    {
        cout << "Nhap phan tu " << "[ " << i << " ]: ";is >> a.dulieu[i];        
    }
    return is;

}

ostream& operator<<(ostream& os, const MangSoNguyen& a)
{
    cout << "\n\n";
    for (int i = 0; i < a.kichthuoc; i++) 
    {
        os << a.dulieu[i] << "\t ";
    }
    return os;
}


MangSoNguyen MangSoNguyen::operator=(const MangSoNguyen& a)
{
    if (this->kichthuoc < a.kichthuoc || this->kichthuoc > a.kichthuoc)
    {
        this->kichthuoc = a.kichthuoc;
    }
    
    for (int i = 0; i < a.kichthuoc; i++) 
    {
        this->dulieu[i] = a.dulieu[i];
    }


    return *this;
}

MangSoNguyen MangSoNguyen::operator+(MangSoNguyen& a)
{
    MangSoNguyen kq;
    if (this->kichthuoc < a.kichthuoc)
        kq.kichthuoc = a.kichthuoc;
    else
        kq.kichthuoc = this->kichthuoc;
    for (int i = 0; i < kq.kichthuoc; i++)
    {
        kq.dulieu[i] = 0;
    }
    for (int i = 0; i < kq.kichthuoc; i++)
    {
        if (this->kichthuoc > i)
            kq.dulieu[i] += this->dulieu[i];
        if (a.kichthuoc > i)
            kq.dulieu[i] += a.dulieu[i];
    }
    return kq;
    
}



MangSoNguyen MangSoNguyen::operator++(int x) 
{
    MangSoNguyen kq;
    for (int i = 0; i < this->kichthuoc; i++) 
    {
        this->dulieu[i] += 1;
    }
    return kq;

}

#####Source.cpp
#include "MangSoNguyen.h"

int main()
{
	MangSoNguyen a, b, c;
	cin >> a;
	cin >> b;
	c = a + b;
	cout << c;
	
}

# L
// FRACTION.H
Basic operations with fractions
Basic operations with fractions
#pragma once
#include <iostream>
#include <math.h>
class PhanSo
{
private:
	int Tu;
	int Mau;
public:
	//PhanSo();
	//~PhanSo();
	//PhanSo(int, int);
	//PhanSo(const PhanSo&);

	//int getts()const;
	//int getms()const;
	//void setts(int);
	//void setms(int);
	//void set(int, int);

	void Nhap_Phan_So();
	void Xuat_Phan_So();
	void Xuat_So_Thap_Phan();
	PhanSo Tong( PhanSo,PhanSo);
	PhanSo Hieu( PhanSo,PhanSo);
	PhanSo Tich(PhanSo, PhanSo);
	PhanSo Thuong(PhanSo, PhanSo);
};

/// FRACTION.CPP

	
#include "PhanSo.h"
#include <iostream>

using namespace std;

void PhanSo::Nhap_Phan_So()
{
	cout << "Nhap Tu So: ";
	cin >> Tu;
	cout << "Nhap Mau So: ";
	cin >> Mau;
}

void PhanSo::Xuat_Phan_So()
{
	int a = this->Tu;
	int b = this->Mau;
	cout << a << "/" << b << endl;
	cout << float(a) / float(b) << endl;

}
void PhanSo::Xuat_So_Thap_Phan()
{
	int a = this->Tu;
	int b = this->Mau;
	cout << float(a) / float(b) << endl;
}
int UCLN(int a, int b)
{
	while (a * b != 0) {
		if (a > b)
			a = a - b;
		else
			b = b - a;
	}
	return a + b;
}

PhanSo PhanSo::Tong(PhanSo a,PhanSo b)
{
	cout << "Tong: ";
	PhanSo k;
	k.Tu = a.Tu * b.Mau + a.Mau * b.Tu;
	k.Mau = a.Mau * b.Mau;
	return k;
	
}
PhanSo PhanSo::Hieu(PhanSo a, PhanSo b)
{
	cout << "Hieu: ";
	PhanSo k;
	k.Tu = a.Tu * b.Mau - a.Mau * b.Tu;
	k.Mau = a.Mau * b.Mau;
	return k;
}

PhanSo PhanSo::Tich(PhanSo a, PhanSo b)
{
	cout << "Tich: ";
	PhanSo k;
	k.Tu = a.Tu  * b.Tu;
	k.Mau = a.Mau * b.Mau;
	return k;
}
PhanSo PhanSo::Thuong(PhanSo a, PhanSo b)
{
	cout << "Thuong: ";
	PhanSo k;
	k.Tu = a.Tu * b.Mau;
	k.Mau = a.Mau * b.Tu;
	return k;
}
  
// SOURCE
#include <iostream>
#include "PhanSo.h"
using namespace std;

int main()
{
	
	PhanSo x, a1, a2, Tong, Hieu, Tich, Thuong;
	x.Nhap_Phan_So();
	x.Xuat_Phan_So();
	a1.Nhap_Phan_So();
	a2.Nhap_Phan_So();
	Tong = Tong.Tong(a1, a2);
	Tong.Xuat_So_Thap_Phan();
	Hieu = Hieu.Hieu(a1, a2);
	Hieu.Xuat_So_Thap_Phan();
	Tich = Tich.Tich(a1, a2);
	Tich.Xuat_So_Thap_Phan();
	Thuong = Thuong.Thuong(a1, a2);
	Thuong.Xuat_So_Thap_Phan();


	return 0;
}

##########
3. Định nghĩa lớp DSPhanSo (danh sách phân số) dựa trên lớp Phân số ở câu 2
để lưu trữ và xử lý các thao tác trên mảng các phân số. Yêu cầu:
a) Viết chương trình cho phép người dùng nhập vào danh sách các phân số
b) Tính tổng các phân số
c) Tìm phân số lớn nhất
d) Tìm phân số nhỏ nhất
8
e) Sắp xếp danh sách phân số tăng dần
f) Sắp xếp danh sách phân số giảm dần
###########
#####File.h
#pragma once
#include <iostream>
#include <math.h>
class PhanSo
{
private:
	int Tu;
	int Mau;
public:
	PhanSo();
	~PhanSo();
	PhanSo(int, int);
	PhanSo(const PhanSo&);

	int getTu()const;
	int getMau()const;
	//int get() const;
	void setTu(int);
	void setMau(int);
	void set(int, int);

	void RutGon();

	void Nhap_Phan_So();
	void Xuat_Phan_So();
	void Xuat_So_Thap_Phan();
	PhanSo Tong(PhanSo, PhanSo);
	PhanSo Hieu(PhanSo, PhanSo);
	PhanSo Tich(PhanSo, PhanSo);
	PhanSo Thuong(PhanSo, PhanSo);
	float Chuyen_Kieu()const;	
};

#pragma once
#include <iostream>
#include"PhanSo.h"
using namespace std;
#define Arr 100
class DSPhanSo
{
private:
	int n;
	PhanSo a[Arr];
public:

	void Nhap();
	void Xuat();
	float Tong();
	float Tim_Max();
	float Tim_Min();
	void Sap_Xep_Tang();
	void Sap_Xep_Giam();
	//~DSPhanSo();
};

#######File.cpp
#include "Phanso.h"
#include <iostream>

using namespace std;


PhanSo::PhanSo()
{
	set(0, 1);
}

PhanSo::~PhanSo()
{

}

PhanSo::PhanSo(int Tu, int Mau)
{
	set(Tu, Mau);
}

PhanSo::PhanSo(const PhanSo& b)

{
	set(b.Tu, b.Mau);

}

void PhanSo::Nhap_Phan_So()
{
	cout << "Nhap Tu So: ";
	cin >> Tu;
	cout << "Nhap Mau So: ";
	cin >> Mau;
}

void PhanSo::Xuat_Phan_So()
{
	int a = this->Tu;
	int b = this->Mau;
	if (a % b == 0)
	{
		cout << float(a) / float(b) << endl;
	}
	else
	{
		cout << a << "/" << b << endl;
	}
	

}
void PhanSo::Xuat_So_Thap_Phan()
{
	int a = this->Tu;
	int b = this->Mau;
	cout << float(a) / float(b) << endl;
}


PhanSo PhanSo::Tong(PhanSo a, PhanSo b)
{
	cout << "Tong: ";
	PhanSo k;
	k.Tu = a.Tu * b.Mau + a.Mau * b.Tu;
	k.Mau = a.Mau * b.Mau;
	return k;

}
PhanSo PhanSo::Hieu(PhanSo a, PhanSo b)
{
	cout << "Hieu: ";
	PhanSo k;
	k.Tu = a.Tu * b.Mau - a.Mau * b.Tu;
	k.Mau = a.Mau * b.Mau;
	return k;
}

PhanSo PhanSo::Tich(PhanSo a, PhanSo b)
{
	cout << "Tich: ";
	PhanSo k;
	k.Tu = a.Tu * b.Tu;
	k.Mau = a.Mau * b.Mau;
	return k;
}
PhanSo PhanSo::Thuong(PhanSo a, PhanSo b)
{
	cout << "Thuong: ";
	PhanSo k;
	k.Tu = a.Tu * b.Mau;
	k.Mau = a.Mau * b.Tu;
	return k;
}

int PhanSo::getTu() const
{
	return this->Tu;
}

int PhanSo::getMau() const
{
	return this->Mau;
}



void PhanSo::setTu(int Tu)
{
	this->Tu = Tu;
}

void PhanSo::setMau(int Mau)
{
	this->Mau = Mau;
}

void PhanSo::set(int Tu,int Mau)
{
	setTu(Tu);
	setMau(Mau);
}
void PhanSo::RutGon()
{
	{
		int a = this->Tu;
		int b = this->Mau;
		int ucln;
		if (a == 0 || b == 0)
		{
			ucln = a + b;
		}
		else
		{
			a = abs(a);
			b = abs(b);
			while (a != b)
			{
				if (a > b)
				{
					a -= b;
				}
				else
				{
					b -= a;
				}
			}
			ucln = a;
		}

		///////////////////
		this->Tu /= ucln;
		this->Mau /= ucln;
		/*if (x * y < 0)
		{
			if (x > 0)
			{
				this->TU *= -1;
				this->MAU = abs(this->MAU);
			}
		}
		else
		{
			if (x < 0)
			{
				this->TU = abs(this->TU);
				this->MAU = abs(this->MAU);
			}
		}*/

	}
}
float PhanSo::Chuyen_Kieu() const
{
	return float(Tu) / Mau;
}

#include "DSPhanSo.h"
#include "Phanso.h"

using namespace std;

void DSPhanSo::Nhap()
{
	cout << "Nhap so luong phan so:";
	cin >> n;
	for (int i = 0;i < n;i++)
	{
		cout << "Nhap phan so thu:" << "[" << i + 1 << "]" << endl;
		a[i].Nhap_Phan_So();
	}

}
void DSPhanSo::Xuat()
{
	
	cout << "So luong phan so:" << n << endl;
	for (int i = 0;i < n;i++)
	{
		a[i].Xuat_Phan_So();
	}

}

float DSPhanSo::Tong()
{ 

	//PhanSo a;
	float Sum = 0;
	for (int i = 0;i < n;i++)
	{
		Sum += a[i].Chuyen_Kieu();
	}
	return Sum;
}
float DSPhanSo::Tim_Max()
{
	float max = a[0].Chuyen_Kieu();
	for (int i = 0;i < n;i++)
	{
       if(a[i].Chuyen_Kieu() > max)
		   {
		   max = a[i].Chuyen_Kieu();
		   }
	}
	return max;
}
float DSPhanSo::Tim_Min()
{
	float min = a[0].Chuyen_Kieu();
	for (int i = 0;i < n;i++)
	{
		if (a[i].Chuyen_Kieu() < min)
		{
			min = a[i].Chuyen_Kieu();
		}
	}
	return min;
}
void DSPhanSo::Sap_Xep_Tang()
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{

			if (a[i].Chuyen_Kieu() > a[j].Chuyen_Kieu())
			{
				swap(a[i], a[j]);
			}
		}
	}
	cout << "Mang tang: " << endl;
	for (int i = 0; i < n; i++) 
	{
		a[i].Xuat_Phan_So();
	}
}
void DSPhanSo::Sap_Xep_Giam()
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{

			if (a[i].Chuyen_Kieu() < a[j].Chuyen_Kieu())
			{
				swap(a[i], a[j]);
			}
		}
	}
	cout << "Mang giam: " << endl;
	for (int i = 0; i < n; i++)
	{
		a[i].Xuat_Phan_So();
	}
}

#######Source.cpp
#include "Phanso.h"
#include "DSPhanSo.h"
#include <iostream>

using namespace std;

int main()
{
	DSPhanSo a;
	a.Nhap();
	a.Xuat();
	cout << "Tong la:" << a.Tong();
	cout << endl;
	cout << "Gia tri lon nhat:" << a.Tim_Max();
	cout << endl;
	cout << "Gia tri nho nhat:" << a.Tim_Min();
	cout << endl;
	a.Sap_Xep_Tang();
	a.Sap_Xep_Giam();

	//a.Xuat_Phan_So();
	//PhanSo b(a);
	//PhanSo a = b;
/*	PhanSo x, a1, a2, Tong, Hieu, Tich, Thuong;
	x.Nhap_Phan_So();
	x.Xuat_Phan_So();
	a1.Nhap_Phan_So();
	a2.Nhap_Phan_So();
	Tong = Tong.Tong(a1, a2);
	Tong.Xuat_So_Thap_Phan();
	Hieu = Hieu.Hieu(a1, a2);
	Hieu.Xuat_So_Thap_Phan();
	Tich = Tich.Tich(a1, a2);
	Tich.Xuat_So_Thap_Phan();
	Thuong = Thuong.Thuong(a1, a2);
	Thuong.Xuat_So_Thap_Phan();*/


}
